
\documentclass{minimal}
\input{regression-test}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation , log-functions }
\ExplSyntaxOff

\input xparse-generic.tex

\START


\ExplSyntaxOn

\TEST { Missing~ required }
  {
    \NewDocumentCommand { \testA } { r<> } { }                \testA \relax
    \NewDocumentCommand { \testB } { R(){?} R(){?} } { }      \testB (X) \relax
    \RenewDocumentCommand { \testA } { +r<> } { }             \testA \relax
    \RenewDocumentCommand { \testB } { R(){?} +R(){?} } { }   \testB (X) \relax
  }

\TEST { Optional~ +~ mandatory~ same~ delimiters }
  {
    \NewDocumentCommand{\foo}{osr[]}{\typeout{|#1|#2|#3|}}
    \foo[A]
    \foo*[B]
    \foo[C][D]
    \foo[E]*[G]
  }

 
\ExplSyntaxOff  % want spaces in the test


\TEST { Splitting arguments }
  {
   \NewDocumentCommand \foo
      {>{\SplitArgument { 2 } { ;; } } m } {\typeout{==>\space #1}}
   \foo{a;;b;;c}
% but ...   
   \RenewDocumentCommand \foo
      {>{\SplitArgument { 2 } {;;} } m } {\typeout{==>\space #1}}
   \foo{a;;b;;c}
   \foo{a;;b;;c;;d}
   \RenewDocumentCommand \foo
      {>{\SplitArgument { 4 } { ; } } m } {\typeout{==>\space #1}}
   \foo{a;;b;;c}
}

\ExplSyntaxOn



\OMIT
\RequirePackage{xparse}
\TIMO

\TEST { deprecated~ stuff }
  {
    \NewDocumentCommand{\foo}{gm}{\typeout{|#1|#2|}}       % more of the previous
    \RenewDocumentCommand{\foo}{G{?}m}{\typeout{|#1|#2|}}  % more of the previous
%    
    \NewExpandableDocumentCommand\dummy{ol}{}
  }


\TEST { make~ robust }
  {
    \MakeRobust\foo
    \def\foo{bar}
    \MakeRobust\foo
    \ShowCommand\foo
    \MakeRobust\foo
  }
\END
