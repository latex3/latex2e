
\documentclass{minimal}
\input{regression-test}
\RequirePackage[check-declarations]{expl3}
\ExplSyntaxOn
\debug_on:n { deprecation }
\ExplSyntaxOff

\START
\AUTHOR{Joseph Wright}

\ExplSyntaxOn

\TEST { Basic~definitions~using~={...} }
  {
    \DeclareDocumentCommand \foo { = { TOC-entry } O{#2} m } { \TYPE { \detokenize { (#1) (#2) } } }
    \foo { bar }
    \foo [ bar ] { baz }
  }

\TEST { Collecting~keyvals }
  {
    \DeclareDocumentCommand \foo { = { TOC-entry } O{ } m } { \TYPE { \detokenize { (#1) (#2) } } }
    \foo [ bong ] { baz }
    \foo [ bong = bang ] { baz }
    \foo [ = , bong ] { baz }
    \foo [ { bong =  bang } ] { baz }
    \foo [ $y = mx + c$  ] { baz }
    \foo [ \( y = mx + c \)  ] { baz }
    \foo [ math = $y \mathbin{=} mx + c$  ] { baz }
    \foo [ \bong { bar } ] { baz }
  }

\TEST { Mixed~argument~types~using~={...} }
  {
    \DeclareDocumentCommand \foo { = { TOC-entry } m } { \TYPE { \detokenize { (#1) } } }
    \foo { bar }
    \foo { { baz } }
    \foo { bong = bing }
  }

\TEST { Awkward~catcodes }
  {
    \DeclareDocumentCommand \foo { = { TOC-entry } m }
      { \TYPE { \detokenize { (#1) } } }
    \foo { { baz } }
    \catcode`\[=1
    \catcode`\]=2
    \tl_rescan:nn
      { \char_set_catcode_group_begin:N \[ \char_set_catcode_group_end:N \] }
      { \foo [ [ baz ] ] }
  }

\TEST { Using~={...}~with~\ShowCommand and~\NewCommandCopy }
  {
    \DeclareDocumentCommand \foo { = { TOC-entry } O{#2} m } { \TYPE { \detokenize { (#1) (#2) } } }
    \ShowCommand\foo
    \DeclareCommandCopy\bar\foo
    \ShowCommand\bar
  }

\TEST { Trying~to~define~expandable~with~={...} }
  {
    \DeclareExpandableDocumentCommand \foo { = { TOC-entry } O{#2} m } { }
  }

\END
