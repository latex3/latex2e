% Testing adding and removing code from hooks in different orders

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}
\input{regression-test}


\ExplSyntaxOn
\cs_new_protected:Npn \ShowHookMsg #1
  {
    \iow_term:n {-------------------}
    \iow_term:n {#1}
    \hook_log:n
  }
\ExplSyntaxOff

\START

\NewHook{some-hook-a}

% Normal order; add code, then remove from an existing hook:
\AddToHook{some-hook-a}[my-package]{CODE}
\ShowHookMsg{my-package added CODE:}{some-hook-a}
\DeclareHookRule{some-hook-a}{my-package}{after}{another-package}
\ShowHookMsg{Adding a rule:}{some-hook-a}
\RemoveFromHook{some-hook-a}[my-package]
\ShowHookMsg{Now there are no code chunks:}{some-hook-a}

% Normal order: add code, then remove from an undeclared hook:
\AddToHook{some-hook-b}[my-package]{CODE}
\ShowHookMsg{my-package added CODE:}{some-hook-b}
\DeclareHookRule{some-hook-b}{my-package}{after}{another-package}
\ShowHookMsg{Adding a rule:}{some-hook-a}
\RemoveFromHook{some-hook-b}[my-package]
\ShowHookMsg{Now there are no code chunks:}{some-hook-b}

% Reversed order; remove code, then try to add to an existing hook:
\RemoveFromHook{some-hook-a}[my-package]
\ShowHookMsg{No code:}{some-hook-a}
\DeclareHookRule{some-hook-a}{my-package}{after}{another-package}
\ShowHookMsg{Adding a rule:}{some-hook-a}
\AddToHook{some-hook-a}[my-package]{CODE}
\ShowHookMsg{Still no code:}{some-hook-a}

% Reversed order: remove code, then try to add to an undeclared hook:
\RemoveFromHook{some-hook-b}[my-package]
\ShowHookMsg{No code:}{some-hook-b}
\DeclareHookRule{some-hook-b}{my-package}{after}{another-package}
\ShowHookMsg{Adding a rule:}{some-hook-a}
\AddToHook{some-hook-b}[my-package]{CODE}
\ShowHookMsg{Still no code:}{some-hook-b}

\END
