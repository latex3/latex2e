This is a generated file for the l3build validation system.
Don't change this file in any respect.
**** Add to hook sffamily (legacy) on input line ... <- \typeout {Std sffamily code}
Update code for hook 'para/before' on input line ...:
Update code for hook 'para/after' on input line ...:
Update code for hook 'para/begin' on input line ...:
Update code for hook 'para/end' on input line ...:
Update code for hook 'begindocument' on input line ...:
Code labels for sorting:
 kernel
Data structure for label rules:
 kernel = 0 -> 
Handled code for kernel
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'include/before' on input line ...:
Update code for hook 'include/end' on input line ...:
Update code for hook 'include/after' on input line ...:
Update code for hook 'include/excluded' on input line ...:
Update code for hook 'selectfont' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Code labels for sorting:
 legacy
Data structure for label rules:
 legacy = 0 -> 
Handled code for legacy
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'label' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
  normal rule kernel/release|kernel/filelist: < found
  normal rule kernel/testmode|kernel/release: -> found
---> Drop 'kernel/release' code from \g__hook_enddocument/info_code_prop because of 'kernel/testmode'
Code labels for sorting:
 kernel/filelist, kernel/warnings, kernel/release and kernel/testmode
Data structure for label rules:
 kernel/filelist = 1 -> kernel/warnings
 kernel/warnings = 1 -> 
 kernel/release = 0 -> kernel/filelist
 kernel/testmode = 0 -> 
Handled code for kernel/release
Handled code for kernel/testmode
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'insertmark' on input line ...:
Update code for hook 'package/before' on input line ...:
Update code for hook 'class/before' on input line ...:
Update code for hook 'package/after' on input line ...:
Update code for hook 'class/after' on input line ...:
Update code for hook 'file/before' on input line ...:
Update code for hook 'file/after' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout' on input line ...:
Update code for hook 'shipout/after' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'file/dinbrief.cls/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/unicode-math/after' on input line ...:
Update code for hook 'file/pgfpages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/pgfmorepages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/babel.sty/before' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/songs.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/crop.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/bigfoot.sty/after' on input line ...:
Update code for hook 'file/ulem.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/varwidth.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/german.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/ngerman.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/underscore.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/acro/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/chemformula/before' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/chemnum/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/cleveref/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/arydshln/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/l3graphics/after' on input line ...:
Code labels for sorting:
 backend
Data structure for label rules:
 backend = 0 -> 
Handled code for backend
All initialized (non-empty) hooks:
 begindocument -> \cs_if_exist:NF \tag_if_active:T {\prg_new_conditional:Npnn \tag_if_active: {p,T,TF,F}{\prg_return_false: }}\__hook_toplevel begindocument \__hook_next begindocument  
 sffamily -> \typeout {Std sffamily code}\__hook_toplevel sffamily \__hook_next sffamily  
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \__hook_toplevel enddocument/info \__hook_next enddocument/info  
 file/dinbrief.cls/after -> \__hook_toplevel file/dinbrief.cls/after \FirstAidNeededT {dinbrief}{cls}{....-..-.. LaTeX2e class}{\AddToHook {env/document/begin}{\begingroup }}\__hook_next file/dinbrief.cls/after  
 file/pgfpages.sty/after -> \__hook_toplevel file/pgfpages.sty/after \cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout \__hook_next file/pgfpages.sty/after  
 file/pgfmorepages.sty/after -> \__hook_toplevel file/pgfmorepages.sty/after \cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }\__hook_next file/pgfmorepages.sty/after  
 file/babel.sty/before -> \def \BabelCaseHack {}\__hook_toplevel file/babel.sty/before \__hook_next file/babel.sty/before  
 file/songs.sty/after -> \__hook_toplevel file/songs.sty/after \FirstAidNeededT {songs}{sty}{....-..-.. v... Songs package}{\renewcommand \SB@obeylines {\let \obeyedline \SB@par \obeylines \let \@par \SB@@par }}\__hook_next file/songs.sty/after  
 file/crop.sty/after -> \__hook_toplevel file/crop.sty/after \FirstAidNeededT {crop}{sty}{....-..-.. 1.10 crop marks (mf)}{\ifdim \stockwidth > 0pt \else \stockwidth \paperwidth \fi \ifdim \stockheight > 0pt \else \stockheight \paperheight \fi \renewcommand *\CROP@genreflect [1]{\leavevmode \dimen 0\CROP@horigin \kern 2\dimen 0 \begingroup \set@typeset@protect \reflectbox {\hb@xt@ \paperwidth {\vbox to\paperheight {##1\vss }\hss }}\endgroup } }\__hook_next file/crop.sty/after  
 file/ulem.sty/after -> \__hook_toplevel file/ulem.sty/after \def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \relax }\x }\__hook_next file/ulem.sty/after  
 file/varwidth.sty/after -> \__hook_toplevel file/varwidth.sty/after \FirstAidNeededT {varwidth}{sty}{....-..-.. ver 0.92; \space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}\__hook_next file/varwidth.sty/after  
 file/german.sty/after -> \__hook_toplevel file/german.sty/after \FirstAidNeededT {german}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germanTeX }\__hook_next file/german.sty/after  
 file/ngerman.sty/after -> \__hook_toplevel file/ngerman.sty/after \FirstAidNeededT {ngerman}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\ngermanTeX }\__hook_next file/ngerman.sty/after  
 file/underscore.sty/after -> \__hook_toplevel file/underscore.sty/after \FirstAidNeededT {underscore}{sty}{....-..-..}{\RequirePackage {underscore-ltx}}\__hook_next file/underscore.sty/after  
 package/acro/after -> \__hook_toplevel package/acro/after \FirstAidNeededT {acro}{sty}{....-..-.. v... typeset acronyms and other abbreviations (CN)} {\UseName {prop_new:c}{l__acro_tmpa_prop}\acsetup {patch/longtable=false}}\__hook_next package/acro/after  
 package/chemformula/before -> \RequirePackage {l3keys2e}\__hook_toplevel package/chemformula/before \__hook_next package/chemformula/before  
 package/chemnum/after -> \__hook_toplevel package/chemnum/after \FirstAidNeededT {chemnum}{sty}{....-..-.. v... a comprehensive approach for the numbering of chemical compounds (CN)} {\UseName {prop_new:c}{l__chemnum_tmpa_prop}}\__hook_next package/chemnum/after  
 package/cleveref/after -> \__hook_toplevel package/cleveref/after \FirstAidNeededT {cleveref}{sty}{....-..-.. v... Intelligent cross-referencing} {\def \cref@getref ##1##2{\expandafter \let \expandafter ##2\csname r@##1@cref\endcsname \expandafter \expandafter \expandafter \def \expandafter \expandafter \expandafter ##2\expandafter \expandafter \expandafter {\expandafter \@firstoffive ##2}}\def \cpageref@getref ##1##2{\expandafter \let \expandafter ##2\csname r@##1@cref\endcsname \expandafter \expandafter \expandafter \def \expandafter \expandafter \expandafter ##2\expandafter \expandafter \expandafter {\expandafter \@secondoffive ##2}}\AddToHook {begindocument}[cleveref]{\def \label@noarg ##1{\cref@old@label {##1}\@bsphack \edef \@tempa {{page}{\the \c@page }}\setcounter {page}{1}\edef \@tempb {\thepage }\expandafter \setcounter \@tempa \cref@constructprefix {page}{\cref@result }\protected@write \@auxout {}{\string \newlabel {##1@cref}{{\cref@currentlabel }{[\@tempb ][\arabic {page}][\cref@result ]\thepage }{}{}{}}}\@esphack }\def \label@optarg [##1]##2{\cref@old@label {##2}\@bsphack \edef \@tempa {{page}{\the \c@page }}\setcounter {page}{1}\edef \@tempb {\thepage }\expandafter \setcounter \@tempa \cref@constructprefix {page}{\cref@result }\protected@edef \cref@currentlabel {\expandafter \cref@override@label@type \cref@currentlabel \@nil {##1}}\protected@write \@auxout {}{\string \newlabel {##2@cref}{{\cref@currentlabel }{[\@tempb ][\arabic {page}][\cref@result ]\thepage }{}{}{}}}\@esphack }} \newcommand \firstaid@cref@smugglelabel {\let \cref@currentlabel \cref@gcurrentlabel@temp } \newcommand \firstaid@cref@updatelabeldata [1]{\cref@constructprefix {##1}{\cref@result }\@ifundefined {cref@##1@alias}{\def \@tempa {##1}}{\def \@tempa {\csname cref@##1@alias\endcsname }}\protected@xdef \cref@gcurrentlabel@temp {[\@tempa ][\arabic {##1}][\cref@result ]\csname p@##1\endcsname \csname the##1\endcsname }\aftergroup \firstaid@cref@smugglelabel } \AddToHook {label}[firstaid/cleveref] {\ifx \@currentcounter \@empty \else \firstaid@cref@updatelabeldata {\@currentcounter }\fi } }\__hook_next package/cleveref/after  
 package/arydshln/after -> \__hook_toplevel package/arydshln/after \FirstAidNeededT {arydshln}{sty}{....-..-.. v... } {\protected \def \adl@@vlineL ##1##2##3##4{\adl@ivline ##4\@nil {##1}{##2}\xdef \adl@colsL {\adl@colsL \@elt {##3}{\number \@tempcnta }{\number \@tempcntb }{\adl@dashcolor }{\adl@gapcolor }}}\protected \def \adl@@vlineR ##1##2##3##4{\adl@ivline ##4\@nil {##1}{##2}\xdef \adl@colsR {\@elt {##3}{\number \@tempcnta }{\number \@tempcntb }{\adl@dashcolor }{\adl@gapcolor }\adl@colsR }}\let \adl@act@@vlineL \adl@@vlineL \let \adl@act@@vlineR \adl@@vlineR }\__hook_next package/arydshln/after  
 package/l3graphics/after -> \__hook_toplevel package/l3graphics/after \seq_set_from_clist:Nn \l_graphics_search_ext_seq {.pdf,.eps,.ps,.png,.jpg,.jpeg}\__hook_next package/l3graphics/after  
No file lthooks-009.aux.
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
Std sffamily code
+first occasion only
Std sffamily code
+extra
Std sffamily code
Update code for hook 'sffamily' on input line ...:
only this code
Nothing?
Update code for hook 'hook' on input line ...:
-> The hook 'hook':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     -> \hello \AddToHookNext {hook}{nested}world!
> Rules:
>     ---
> Execution order:
>     ---.
Use 'hook': \__hook_clear_next:n {hook}Hello, \AddToHookNext {hook}{nested}world!
-> The hook 'hook':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     -> \hello \AddToHookNext {hook}{nested}world!
> Rules:
>     ---
> Execution order:
>     ---.
and again: \__hook_clear_next:n {hook}Hello, \AddToHookNext {hook}{nested}world!
-> The hook 'hook':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     -> \hello \AddToHookNext {hook}{nested}world!
> Rules:
>     ---
> Execution order:
>     ---.
once more: \__hook_clear_next:n {hook}Hello, \AddToHookNext {hook}{nested}world!
-> The hook 'hook':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     -> \hello \AddToHookNext {hook}{nested}world!
> Rules:
>     ---
> Execution order:
>     ---.
Absolute page = 1 (target: 1)
[1
] (lthooks-009.aux)
