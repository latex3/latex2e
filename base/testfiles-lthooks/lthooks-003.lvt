% the example from TACP V1
%
% interestingly the algorithm generates a different result compared to the figure
% given by Knuth earlier, but I think the algorithm is correctly implement so that
% this might call for a $2.56 cheque (or not as it isn't explicitly said that the earlier
% example is actually the result of the later algorithm. But I think it is a bit
% unfortunate though.

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}

\input{regression-test}

\DebugHooksOn

\START

\NewHook{xxx}
\AddToHook{xxx}[label1]{ foo1}
\AddToHook{xxx}[label2]{ foo2}
\AddToHook{xxx}[label3]{ foo3}
\AddToHook{xxx}[label4]{ foo4}
\AddToHook{xxx}[label5]{ foo5}
\AddToHook{xxx}[label6]{ foo6}
\AddToHook{xxx}[label7]{ foo7}
\AddToHook{xxx}[label8]{ foo8}
\AddToHook{xxx}[label9]{ foo9}

\DeclareHookRule {xxx} {label2} {after} {label9}
\DeclareHookRule {xxx} {label3} {before} {label7}
\DeclareHookRule {xxx} {label5} {after} {label7}
\DeclareHookRule {xxx} {label5} {before} {label8}
\DeclareHookRule {xxx} {label6} {after} {label8}
\DeclareHookRule {xxx} {label4} {before} {label6}
\DeclareHookRule {xxx} {label1} {before} {label3}
\DeclareHookRule {xxx} {label4} {after} {label7}
\DeclareHookRule {xxx} {label5} {after} {label9}
\DeclareHookRule {xxx} {label2} {before} {label8}


% rules that should get dropped as not both labels are used in the hook:
\DeclareHookRule {xxx} {label1} {before} {no}
\DeclareHookRule {xxx} {no} {before} {label2}
\DeclareHookRule {xxx} {no} {before} {nono}



\ExplSyntaxOn
\prop_log:N \g__hook_xxx_code_prop
\seq_log:N \g__hook_all_seq

\__hook_debug_print_rules:n { xxx }

% initialize the hook code:

\__hook_initialize_all:


\ExplSyntaxOff


\END
