This is a generated file for the l3build validation system.
Don't change this file in any respect.
-> The generic hook 'env/foo/before':
> Code chunks:
>     label -> \typeout {env/foo/before}
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     label.
<recently read> }
l. ...\hook_show:n { env/foo/before }
env/foo/before
-> The hook 'envfoobefore':
> The hook is not declared.
> Code chunks:
>     label -> \typeout {envfoobefore}
> Document-level (top-level) code:
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\hook_show:n { envfoobefore }
envfoobefore
-> The generic hook 'env/foo/after':
> Code chunks:
>     ---
> Document-level (top-level) code (executed first):
>     ---
> Extra code for next invocation:
>     -> \typeout {env/foo/after}
> Rules:
>     ---
> Execution order (after reversal):
>     ---.
<recently read> }
l. ...\hook_show:n { env/foo/after }
env/foo/after
-> The hook 'envfooafter':
> The hook is not declared.
> Code chunks:
>     ---
> Document-level (top-level) code:
>     ---
> Extra code for next invocation:
>     -> \typeout {envfooafter}
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\hook_show:n { envfooafter }
envfooafter
-> The generic hook 'env/foo/begin':
> Code chunks:
>     ---
> Document-level (top-level) code (executed last):
>     -> \typeout {env/foo/begin}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     ---.
<recently read> }
l. ...\hook_show:n { env/foo/begin }
env/foo/begin
-> The hook 'envfoobegin':
> The hook is not declared.
> Code chunks:
>     ---
> Document-level (top-level) code:
>     -> \typeout {envfoobegin}
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     Not set because the hook is undeclared.
<recently read> }
l. ...\hook_show:n { envfoobegin }
envfoobegin
