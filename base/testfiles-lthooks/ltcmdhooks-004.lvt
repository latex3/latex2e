\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}
\input{regression-test}


%\ExplSyntaxOn
%% fake \begin{document} for cmd hooks
%\cs_gset_eq:NN \__hook_patch_cmd_or_delay:Nnn \__hook_patch_command:Nnn
%\ExplSyntaxOff

\begin{document}

\START

\DebugHooksOn

\typeout{^^JCommand patched with expand-and-redefine}
\newcommand\foo[2][opt]{\typeout{\string\foo[#1]{#2}}}
\AddToHook{cmd/foo/before}{\typeout{[top-level] \string\foo\space with [#1]{#2}}}
\AddToHook{cmd/foo/after}[lbl]{\typeout{[main] \string\foo\space with [#1]{#2}}}
\foo[hello]{world}

\typeout{^^JCommand patched with retokenisation}
\def\bar#1/#2/{\typeout{\string\bar{#1}{#2}}}
\AddToHook{cmd/bar/before}{\typeout{[top-level] \string\bar\space with {#1}{#2}}}
\AddToHook{cmd/bar/after}[lbl]{\typeout{[main] \string\bar\space with {#1}{#2}}}
\bar hello/world/

\typeout{^^Jltcmd Command (always expand-and-redefine)}
\NewDocumentCommand\baz{mo}{\typeout{\string\baz{#1}[#2]}}
\AddToHook{cmd/baz/before}{\typeout{[top-level] \string\baz\space with {#1}[#2]}}
\AddToHook{cmd/baz/after}[lbl]{\typeout{[main] \string\baz\space with {#1}[#2]}}
\baz{hello}[world]

\typeout{^^Jltcmd expandable Command (always expand-and-redefine)}
\NewExpandableDocumentCommand\boo{om}{\string\boo[#1]{#2}^^J}
\AddToHook{cmd/boo/before}{[top-level] \string\boo\space with [#1]{#2}^^J}
\AddToHook{cmd/boo/after}[lbl]{[main] \string\boo\space with [#1]{#2}^^J}
\typeout{\boo[hello]{world}}

\END
