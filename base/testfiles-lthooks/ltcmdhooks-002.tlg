This is a generated file for the l3build validation system.
Don't change this file in any respect.
-> Adding cmd hook to 'foo' (before):
-> Add generic cmd hook for foo (before).
! In the preamble: delaying.
**** Add to hook cmd/foo/before (x) on input line ... <-  before 
-> Adding cmd hook to 'foo' (after):
-> Add generic cmd hook for foo (after).
! In the preamble: delaying.
**** Add to hook cmd/foo/after (x) on input line ... <-  after 
Update code for hook 'cmd/foo/before' on input line ...:
Code labels for sorting:
 x
Data structure for label rules:
 x = 0 -> 
Handled code for x
-> The generic hook 'cmd/foo/before' (unknown arguments):
> Code chunks:
>     x ->  before 
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     x.
<recently read> }
l. ...\ShowHook{cmd/foo/before}
> \foo=\long macro:
#1#2->FOO #1 #2.
l. ...\show\foo
-> \begin{document} try cmd/foo/before.
[lthooks] analyzing '\foo'
[lthooks] \foo=\long macro:#1#2->FOO #1 #2
[lthooks] ++ control sequence is defined
[lthooks] ++ control sequence is a macro
[lthooks] ++ macro is not private
[lthooks] .. command can only be patched by rescanning
[lthooks] ++ trying to patch by retokenization
[lthooks] ++ macro can be retokenized cleanly
[lthooks] == retokenizing macro now
Update code for hook 'cmd/foo/before' on input line ...:
Code labels for sorting:
 x
Data structure for label rules:
 x = 0 -> 
Handled code for x
-> \begin{document} try cmd/foo/after.
[lthooks] analyzing '\foo'
[lthooks] \foo=\long macro:#1#2->\UseHookWithArguments {cmd/foo/before}{2}{#1}{#2}FOO #1 #2
[lthooks] ++ control sequence is defined
[lthooks] ++ control sequence is a macro
[lthooks] ++ macro is not private
[lthooks] .. command can only be patched by rescanning
[lthooks] ++ trying to patch by retokenization
[lthooks] ++ macro can be retokenized cleanly
[lthooks] == retokenizing macro now
Update code for hook 'cmd/foo/after' on input line ...:
Code labels for sorting:
 x
Data structure for label rules:
 x = 0 -> 
Handled code for x
> \foo=\long macro:
#1#2->\UseHookWithArguments {cmd/foo/before}{2}{#1}{#2}FOO #1 #2\UseHookWithArguments {cmd/foo/after}{2}{#1}{#2}.
l. ...\show\foo
Completed box being shipped out [1]
\vbox(633.0+0.0)x407.0
.\glue 16.0
.\vbox(617.0+0.0)x345.0, shifted 62.0
..\vbox(12.0+0.0)x345.0, glue set 12.0fil
...\glue 0.0 plus 1.0fil
...\hbox(0.0+0.0)x345.0
....\hbox(0.0+0.0)x345.0
..\glue 25.0
..\glue(\lineskip) 0.0
..\vbox(550.0+0.0)x345.0, glue set 539.94232fil
...\write-{}
...\glue(\topskip) 3.05556
...\hbox(6.94444+0.0)x345.0, glue set 229.94426fil
....\hbox(0.0+0.0)x15.0
....\OT1/cmr/m/n/10 b
....\kern0.27779
....\OT1/cmr/m/n/10 e
....\OT1/cmr/m/n/10 f
....\OT1/cmr/m/n/10 o
....\OT1/cmr/m/n/10 r
....\OT1/cmr/m/n/10 e
....\glue 3.33333 plus 1.66666 minus 1.11111
....\OT1/cmr/m/n/10 F
....\kern-0.27779
....\OT1/cmr/m/n/10 O
....\OT1/cmr/m/n/10 O
....\glue 3.33333 plus 1.66498 minus 1.11221
....\OT1/cmr/m/n/10 A
....\glue 3.33333 plus 1.66498 minus 1.11221
....\OT1/cmr/m/n/10 B
....\glue 3.33333 plus 1.66498 minus 1.11221
....\OT1/cmr/m/n/10 a
....\OT1/cmr/m/n/10 f
....\OT1/cmr/m/n/10 t
....\OT1/cmr/m/n/10 e
....\OT1/cmr/m/n/10 r
....\glue 3.33333 plus 1.66666 minus 1.11111
....\penalty 10000
....\glue(\parfillskip) 0.0 plus 1.0fil
....\glue(\rightskip) 0.0
...\glue 0.0 plus 1.0fil
...\glue 0.0
...\glue 0.0 plus 0.0001fil
..\glue(\baselineskip) 23.55556
..\hbox(6.44444+0.0)x345.0
...\hbox(6.44444+0.0)x345.0, glue set 170.0fil
....\glue 0.0 plus 1.0fil
....\OT1/cmr/m/n/10 1
....\glue 0.0 plus 1.0fil
(ltcmdhooks-002.aux)
