This is a generated file for the l3build validation system.
Don't change this file in any respect.
**** Add to hook xxx (label1) on input line ... <- foo
**** Add to hook xxx (label2) on input line ... <- bar
The property list \g__hook_xxx_code_prop contains the pairs (without outer
braces):
>  {label1}  =>  {foo}
>  {label2}  =>  {bar}.
Update code for hook 'para/before' on input line ...:
Update code for hook 'para/after' on input line ...:
Update code for hook 'para/begin' on input line ...:
Update code for hook 'para/end' on input line ...:
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'include/before' on input line ...:
Update code for hook 'include/end' on input line ...:
Update code for hook 'include/after' on input line ...:
Update code for hook 'include/excluded' on input line ...:
Update code for hook 'selectfont' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'label' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
  normal rule kernel/release|kernel/filelist: < found
  normal rule kernel/testmode|kernel/release: -> found
---> Drop 'kernel/release' code from \g__hook_enddocument/info_code_prop because of 'kernel/testmode'
Code labels for sorting:
 kernel/filelist, kernel/warnings, kernel/release and kernel/testmode
Data structure for label rules:
 kernel/filelist = 1 -> kernel/warnings
 kernel/warnings = 1 -> 
 kernel/release = 0 -> kernel/filelist
 kernel/testmode = 0 -> 
Handled code for kernel/release
Handled code for kernel/testmode
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'insertmark' on input line ...:
Update code for hook 'package/before' on input line ...:
Update code for hook 'class/before' on input line ...:
Update code for hook 'package/after' on input line ...:
Update code for hook 'class/after' on input line ...:
Update code for hook 'file/before' on input line ...:
Update code for hook 'file/after' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout' on input line ...:
Update code for hook 'shipout/after' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'file/dinbrief.cls/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/unicode-math/after' on input line ...:
Update code for hook 'file/pgfpages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/pgfmorepages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/babel.sty/before' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/songs.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/crop.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/bigfoot.sty/after' on input line ...:
Update code for hook 'file/ulem.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/varwidth.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/german.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/ngerman.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/underscore.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 label1 and label2
Data structure for label rules:
 label1 = 0 -> 
 label2 = 0 -> 
Handled code for label1
Handled code for label2
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \__hook_toplevel enddocument/info \__hook_next enddocument/info  
 file/dinbrief.cls/after -> \__hook_toplevel file/dinbrief.cls/after \FirstAidNeededT {dinbrief}{cls}{....-..-.. LaTeX2e class}{\AddToHook {env/document/begin}{\begingroup }}\__hook_next file/dinbrief.cls/after  
 file/pgfpages.sty/after -> \__hook_toplevel file/pgfpages.sty/after \cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout \__hook_next file/pgfpages.sty/after  
 file/pgfmorepages.sty/after -> \__hook_toplevel file/pgfmorepages.sty/after \cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }\__hook_next file/pgfmorepages.sty/after  
 file/babel.sty/before -> \def \BabelCaseHack {}\__hook_toplevel file/babel.sty/before \__hook_next file/babel.sty/before  
 file/songs.sty/after -> \__hook_toplevel file/songs.sty/after \FirstAidNeededT {songs}{sty}{....-..-.. v... Songs package}{\renewcommand \SB@obeylines {\let \obeyedline \SB@par \obeylines \let \@par \SB@@par }}\__hook_next file/songs.sty/after  
 file/crop.sty/after -> \__hook_toplevel file/crop.sty/after \FirstAidNeededT {crop}{sty}{....-..-.. 1.10 crop marks (mf)}{\ifdim \stockwidth > 0pt \else \stockwidth \paperwidth \fi \ifdim \stockheight > 0pt \else \stockheight \paperheight \fi \renewcommand *\CROP@genreflect [1]{\leavevmode \dimen 0\CROP@horigin \kern 2\dimen 0 \begingroup \set@typeset@protect \reflectbox {\hb@xt@ \paperwidth {\vbox to\paperheight {##1\vss }\hss }}\endgroup } }\__hook_next file/crop.sty/after  
 file/ulem.sty/after -> \__hook_toplevel file/ulem.sty/after \def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \relax }\x }\__hook_next file/ulem.sty/after  
 file/varwidth.sty/after -> \__hook_toplevel file/varwidth.sty/after \FirstAidNeededT {varwidth}{sty}{....-..-.. ver 0.92; \space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}\__hook_next file/varwidth.sty/after  
 file/german.sty/after -> \__hook_toplevel file/german.sty/after \FirstAidNeededT {german}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germanTeX }\__hook_next file/german.sty/after  
 file/ngerman.sty/after -> \__hook_toplevel file/ngerman.sty/after \FirstAidNeededT {ngerman}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\ngermanTeX }\__hook_next file/ngerman.sty/after  
 file/underscore.sty/after -> \__hook_toplevel file/underscore.sty/after \FirstAidNeededT {underscore}{sty}{....-..-..}{\RequirePackage {underscore-ltx}}\__hook_next file/underscore.sty/after  
 xxx -> foobar\__hook_toplevel xxx \__hook_next xxx  
LaTeX hooks Warning: Cannot remove chunk 'label3' from hook 'xxx' because it
(hooks)              does not exist in that hook.
LaTeX hooks Warning: Cannot remove chunk 'label3' from hook 'yyy' because the
(hooks)              hook does not exist.
**** Add to hook xxx (top-level) on input line ... <- baz
The property list \g__hook_xxx_code_prop contains the pairs (without outer
braces):
>  {label1}  =>  {foo}.
> \__hook_toplevel xxx=\long macro:->baz.
The sequence \g__hook_all_seq contains the items (without outer braces):
>  {para/before}
>  {para/after}
>  {para/begin}
>  {para/end}
>  {begindocument}
>  {begindocument/before}
>  {begindocument/end}
>  {include/before}
>  {include/end}
>  {include/after}
>  {include/excluded}
>  {selectfont}
>  {rmfamily}
>  {sffamily}
>  {ttfamily}
>  {normalfont}
>  {expand@font@defaults}
>  {bfseries}
>  {bfseries/defaults}
>  {mdseries}
>  {mdseries/defaults}
>  {label}
>  {enddocument}
>  {enddocument/afterlastpage}
>  {enddocument/afteraux}
>  {enddocument/info}
>  {enddocument/end}
>  {insertmark}
>  {package/before}
>  {class/before}
>  {package/after}
>  {class/after}
>  {file/before}
>  {file/after}
>  {shipout/before}
>  {shipout}
>  {shipout/after}
>  {shipout/foreground}
>  {shipout/background}
>  {shipout/firstpage}
>  {shipout/lastpage}
>  {file/dinbrief.cls/after}
>  {package/unicode-math/after}
>  {file/pgfpages.sty/after}
>  {file/pgfmorepages.sty/after}
>  {file/babel.sty/before}
>  {file/songs.sty/after}
>  {file/crop.sty/after}
>  {file/bigfoot.sty/after}
>  {file/ulem.sty/after}
>  {file/varwidth.sty/after}
>  {file/german.sty/after}
>  {file/ngerman.sty/after}
>  {file/underscore.sty/after}
>  {xxx}.
Update code for hook 'para/before' on input line ...:
Update code for hook 'para/after' on input line ...:
Update code for hook 'para/begin' on input line ...:
Update code for hook 'para/end' on input line ...:
Update code for hook 'begindocument' on input line ...:
Update code for hook 'begindocument/before' on input line ...:
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'include/before' on input line ...:
Update code for hook 'include/end' on input line ...:
Update code for hook 'include/after' on input line ...:
Update code for hook 'include/excluded' on input line ...:
Update code for hook 'selectfont' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'normalfont' on input line ...:
Update code for hook 'expand@font@defaults' on input line ...:
Update code for hook 'bfseries' on input line ...:
Update code for hook 'bfseries/defaults' on input line ...:
Update code for hook 'mdseries' on input line ...:
Update code for hook 'mdseries/defaults' on input line ...:
Update code for hook 'label' on input line ...:
Update code for hook 'enddocument' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
  normal rule kernel/release|kernel/filelist: < found
  normal rule kernel/testmode|kernel/release: -> found
---> Drop 'kernel/release' code from \g__hook_enddocument/info_code_prop because of 'kernel/testmode'
Code labels for sorting:
 kernel/filelist, kernel/warnings, kernel/release and kernel/testmode
Data structure for label rules:
 kernel/filelist = 1 -> kernel/warnings
 kernel/warnings = 1 -> 
 kernel/release = 0 -> kernel/filelist
 kernel/testmode = 0 -> 
Handled code for kernel/release
Handled code for kernel/testmode
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'insertmark' on input line ...:
Update code for hook 'package/before' on input line ...:
Update code for hook 'class/before' on input line ...:
Update code for hook 'package/after' on input line ...:
Update code for hook 'class/after' on input line ...:
Update code for hook 'file/before' on input line ...:
Update code for hook 'file/after' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout' on input line ...:
Update code for hook 'shipout/after' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'file/dinbrief.cls/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'package/unicode-math/after' on input line ...:
Update code for hook 'file/pgfpages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/pgfmorepages.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/babel.sty/before' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/songs.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/crop.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/bigfoot.sty/after' on input line ...:
Update code for hook 'file/ulem.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/varwidth.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/german.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/ngerman.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'file/underscore.sty/after' on input line ...:
Code labels for sorting:
 firstaid
Data structure for label rules:
 firstaid = 0 -> 
Handled code for firstaid
Update code for hook 'xxx' on input line ...:
Code labels for sorting:
 label1
Data structure for label rules:
 label1 = 0 -> 
Handled code for label1
All initialized (non-empty) hooks:
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \__hook_toplevel enddocument/info \__hook_next enddocument/info  
 file/dinbrief.cls/after -> \__hook_toplevel file/dinbrief.cls/after \FirstAidNeededT {dinbrief}{cls}{....-..-.. LaTeX2e class}{\AddToHook {env/document/begin}{\begingroup }}\__hook_next file/dinbrief.cls/after  
 file/pgfpages.sty/after -> \__hook_toplevel file/pgfpages.sty/after \cs_gset_eq:NN \shipout \pgfpages@originalshipout \cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout \__hook_next file/pgfpages.sty/after  
 file/pgfmorepages.sty/after -> \__hook_toplevel file/pgfmorepages.sty/after \cs_set_nopar:Npn \pgfhookintoshipout {\cs_set_eq:NN \pgfpages@originalshipout \tex_shipout:D \cs_set_eq:NN \tex_shipout:D \pgfpages@interceptshipout }\__hook_next file/pgfmorepages.sty/after  
 file/babel.sty/before -> \def \BabelCaseHack {}\__hook_toplevel file/babel.sty/before \__hook_next file/babel.sty/before  
 file/songs.sty/after -> \__hook_toplevel file/songs.sty/after \FirstAidNeededT {songs}{sty}{....-..-.. v... Songs package}{\renewcommand \SB@obeylines {\let \obeyedline \SB@par \obeylines \let \@par \SB@@par }}\__hook_next file/songs.sty/after  
 file/crop.sty/after -> \__hook_toplevel file/crop.sty/after \FirstAidNeededT {crop}{sty}{....-..-.. 1.10 crop marks (mf)}{\ifdim \stockwidth > 0pt \else \stockwidth \paperwidth \fi \ifdim \stockheight > 0pt \else \stockheight \paperheight \fi \renewcommand *\CROP@genreflect [1]{\leavevmode \dimen 0\CROP@horigin \kern 2\dimen 0 \begingroup \set@typeset@protect \reflectbox {\hb@xt@ \paperwidth {\vbox to\paperheight {##1\vss }\hss }}\endgroup } }\__hook_next file/crop.sty/after  
 file/ulem.sty/after -> \__hook_toplevel file/ulem.sty/after \def \@hspace ##1{\begingroup \setlength \skip@ {##1}\edef \x {\endgroup \hskip \the \skip@ \relax }\x }\__hook_next file/ulem.sty/after  
 file/varwidth.sty/after -> \__hook_toplevel file/varwidth.sty/after \FirstAidNeededT {varwidth}{sty}{....-..-.. ver 0.92; \space Variable-width minipages}{\def \@vwid@sift {\skip@ \lastskip \unskip \ifdim \lastskip =\z@ \unskip \fi \dimen@ \lastkern \unkern \count@ \lastpenalty \unpenalty \setbox \z@ \lastbox \ifvoid \z@ \advance \sift@deathcycles \@ne \else \sift@deathcycles \z@ \fi \ifnum \sift@deathcycles >33 \let \@vwid@sift \relax \PackageWarning {varwidth}{Failed to reprocess entire contents}\fi \ifnum \count@ =\@vwid@preeqp \@vwid@eqmodefalse \fi \ifnum \count@ =\@vwid@posteqp \@vwid@eqmodetrue \fi \ifnum \count@ =\@vwid@toppen \let \@vwid@sift \relax \else \ifnum \count@ =\@vwid@offsets \@vwid@setoffsets \else \ifnum \count@ =\@vwid@postw \else \@vwid@resetb \fi \@vwid@append \fi \fi \@vwid@sift }}\__hook_next file/varwidth.sty/after  
 file/german.sty/after -> \__hook_toplevel file/german.sty/after \FirstAidNeededT {german}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\germanTeX }\__hook_next file/german.sty/after  
 file/ngerman.sty/after -> \__hook_toplevel file/ngerman.sty/after \FirstAidNeededT {ngerman}{sty}{....-..-.. v... Support for writing german texts (br)} {\let \grmn@active@dq@ \@active@dq \def \@active@dq {\protect \grmn@active@dq@ }\ngermanTeX }\__hook_next file/ngerman.sty/after  
 file/underscore.sty/after -> \__hook_toplevel file/underscore.sty/after \FirstAidNeededT {underscore}{sty}{....-..-..}{\RequirePackage {underscore-ltx}}\__hook_next file/underscore.sty/after  
 xxx -> foo\__hook_toplevel xxx \__hook_next xxx  
The hook xxx contains the rules:
