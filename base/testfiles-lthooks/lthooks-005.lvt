% the example from TACP V1 but with global and local rules

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\documentclass{article}

\input{regression-test}

\DebugHooksOn

\START

\NewHook{xxx}
\NewHook{xxx}            % testing double declarations



\AddToHook{xxx}[label1]{ foo1}
\AddToHook{xxx}[label2]{ foo2}
\AddToHook{xxx}[label3]{ foo3}
\AddToHook{xxx}[label4]{ foo4}
\AddToHook{xxx}[label5]{ foo5}
\AddToHook{xxx}[label6]{ foo6}
\AddToHook{xxx}[label7]{ foo7}
\AddToHook{xxx}[label8]{ foo8}
\AddToHook{xxx}[label9]{ foo9}

% 3 global rules
\DeclareHookRule {??} {label2} {after} {label9}
\DeclareHookRule {??} {label3} {before} {label7}
\DeclareHookRule {??} {label5} {after} {label7}

\DeclareHookRule {xxx} {label5} {before} {label8}
\DeclareHookRule {xxx} {label6} {after} {label8}
\DeclareHookRule {xxx} {label4} {before} {label6}
\DeclareHookRule {xxx} {label1} {before} {label3}
\DeclareHookRule {xxx} {label4} {after} {label7}
\DeclareHookRule {xxx} {label5} {after} {label9}
\DeclareHookRule {xxx} {label2} {before} {label8}

% xxx ->  foo1 foo2 foo9 foo5 foo7 foo8 foo3 foo4 foo6\__hook_next xxx 
 
% rules that should get dropped as not both labels are used in the hook:
\DeclareHookRule {xxx} {label1} {before} {no}
\DeclareHookRule {xxx} {no} {before} {label2}
\DeclareHookRule {xxx} {no} {before} {nono}



\ExplSyntaxOn
\prop_log:N \g__hook_xxx_code_prop
\seq_log:N \g__hook_all_seq

\__hook_debug_print_rules:n { xxx }

% initialize the hook code:

\__hook_initialize_all:

\ExplSyntaxOff


\END
