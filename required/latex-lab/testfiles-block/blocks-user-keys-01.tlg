This is a generated file for the l3build validation system.
Don't change this file in any respect.
==> enumerate-env-start
==> use instance: list-1
==> @endpe=false on input line ...
==> use instance: enum-1
==> template:list:std
==> template:list:std end
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> template:item:std
==> item everypar on input line ...
==> increment P on input line ...
==> enumerate-env-start
==> use instance: list-2
==> increment /P on input line ...
==> use instance: enum-2
==> template:list:std
==> template:list:std end
==> template:item:std
> \UnusedTemplateKeys=macro:
->foo={bar}.
<argument> \show \UnusedTemplateKeys 
l. ...      \item a
                  bc
==> item everypar on input line ...
==> increment P on input line ...
==> template:item:std
> \UnusedTemplateKeys=macro:
->foo={bar}.
<argument> \show \UnusedTemplateKeys 
l. ...      \item[a=a,b=b]
                          ghi
! LaTeX Error: The key 'template/item/std/a' is unknown and is being ignored.
For immediate help type H <return>.
 ...                                              
l. ...      \item[a=a,b=b]
                          ghi
The module 'template/item/std' does not have a key called 'template/item/std/a'.
Check that you have spelled the key name correctly.
! LaTeX Error: The key 'template/item/std/b' is unknown and is being ignored.
For immediate help type H <return>.
 ...                                              
l. ...      \item[a=a,b=b]
                          ghi
The module 'template/item/std' does not have a key called 'template/item/std/b'.
Check that you have spelled the key name correctly.
==> item everypar on input line ...
==> increment P on input line ...
==> blockenv common ending on input line ...
==> blockenv common ending on input line ...
==> Structure-end P at list-end on input line ...
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
[1
] (blocks-user-keys-01.aux)
Package tagpdf Info: Finalizing the tagging structure:
(tagpdf)             Writing out ~29 structure objects
(tagpdf)             with ~11 'MC' leaf nodes.
(tagpdf)             Be patient if there are lots of objects!
Package tagpdf Info: writing ParentTree
Package tagpdf Info: writing IDTree
Package tagpdf Info: writing RoleMap
Package tagpdf Info: writing ClassMap
Package tagpdf Info: writing NameSpaces
Package tagpdf Info: writing StructElems
Package tagpdf Info: writing Root
