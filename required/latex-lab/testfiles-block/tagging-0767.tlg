This is a generated file for the l3build validation system.
Don't change this file in any respect.
toplevel ---> \parskip = 0.0pt plus 1.0pt
toplevel ---> \parindent = 15.0pt
toplevel ---> \listparindent = 0.0pt
[Template] ==> use 'blockenv' instance: theorem on input line ...
[Blocks] ==> theorem-like-env-start
[Template] ==> use 'block' instance: theoremblock-0 on input line ...
[Blocks] ==> increment P on input line ...
theorem ---> \parskip = 0.0pt plus 1.0pt
theorem ---> \parindent = 15.0pt
theorem ---> \listparindent = 0.0pt
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> @endpe=false on input line ...
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
theorem-enumerate-1 ---> \parskip = 4.0pt plus 2.0pt minus 1.0pt
theorem-enumerate-1 ---> \parindent = 0.0pt
theorem-enumerate-1 ---> \listparindent = 0.0pt
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> @endpe=false on input line ...
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
theorem-enumerate-2 ---> \parskip = 2.0pt plus 1.0pt minus 1.0pt
theorem-enumerate-2 ---> \parindent = 0.0pt
theorem-enumerate-2 ---> \listparindent = 0.0pt
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> Structure-end text-unit at list-end on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> block-end on input line ...
[Blocks] ==> close /text-unit on input line ...
toplevel ---> \parskip = 0.0pt plus 1.0pt
toplevel ---> \parindent = 15.0pt
toplevel ---> \listparindent = 22.0pt
[Template] ==> use 'blockenv' instance: theorem on input line ...
[Blocks] ==> theorem-like-env-start
[Template] ==> use 'block' instance: theoremblock-0 on input line ...
[Blocks] ==> increment P on input line ...
theorem ---> \parskip = 0.0pt plus 1.0pt
theorem ---> \parindent = 15.0pt
theorem ---> \listparindent = 22.0pt
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> @endpe=false on input line ...
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
theorem-enumerate-1 ---> \parskip = 4.0pt plus 2.0pt minus 1.0pt
theorem-enumerate-1 ---> \parindent = 0.0pt
theorem-enumerate-1 ---> \listparindent = 22.0pt
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[1
]
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> @endpe=false on input line ...
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
theorem-enumerate-2 ---> \parskip = 2.0pt plus 1.0pt minus 1.0pt
theorem-enumerate-2 ---> \parindent = 0.0pt
theorem-enumerate-2 ---> \listparindent = 33.0pt
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> Structure-end text-unit at list-end on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> block-end on input line ...
[Blocks] ==> close /text-unit on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> @endpe=false on input line ...
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
enumerate-1 ---> \parskip = 4.0pt plus 2.0pt minus 1.0pt
enumerate-1 ---> \parindent = 0.0pt
theorem-enumerate-1 ---> \listparindent = 22.0pt
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> increment P on input line ...
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> flattened=false on input line ...
[Blocks] ==> Structure-end text-unit after displayblock on input line ...
[2]<<latex-list-css.html>><<latex-align-css.html>> (tagging-0767.aux)
Package tagpdf Info: Finalizing the tagging structure:
(tagpdf)             Writing out ~88 structure objects
(tagpdf)             with ~37 'MC' leaf nodes.
(tagpdf)             Be patient if there are lots of objects!
Package tagpdf Info: writing ParentTree
Package tagpdf Info: writing IDTree
Package tagpdf Info: writing RoleMap
Package tagpdf Info: writing ClassMap
Package tagpdf Info: writing NameSpaces
Package tagpdf Info: writing StructElems
Package tagpdf Info: writing Root
