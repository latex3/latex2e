This is a generated file for the l3build validation system.
Don't change this file in any respect.
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[1
]
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-1 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-1 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'blockenv' instance: enumerate on input line ...
[Blocks] ==> enumerate-env-start
[Template] ==> use 'block' instance: listblock-2 on input line ...
[Blocks] ==> __kernel_displayblock_beginpar_vmode:
[Blocks] ==> __kernel_displayblock_begin:
[Template] ==> use 'list' instance: enum-2 on input line ...
[Blocks] ==> template:list:std
[Blocks] ==> template:list:std end
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Template] ==> use 'item' instance: basic on input line ...
[Blocks] ==> template:item:std
[Blocks] ==> item everypar on input line ...
[Blocks] ==> blockenv common ending on input line ...
[Blocks] ==> __kernel_displayblock_end:
[2] (blocks-enumerate-05.aux)
