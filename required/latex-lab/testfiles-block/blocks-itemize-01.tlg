This is a generated file for the l3build validation system.
Don't change this file in any respect.
[block] itemize-env-start
[block] use 'block' instance: list-1
[block] increment /P on input line ...
[block] use 'list' instance: itemize-1
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] center-env-start
[block] use 'block' instance: displayblock-1
[block] increment /P on input line ...
[block] use 'para' instance: center
[block] blockenv common ending on input line ...
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] item with optional
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] blockenv common ending on input line ...
[block] flattened=false on input line ...
[block] Structure-end text-unit after displayblock on input line ...
[block] itemize-env-start
[block] use 'block' instance: list-1
[block] @endpe=false on input line ...
[block] use 'list' instance: itemize-1
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] item with optional
[block] item everypar on input line ...
[block] increment P on input line ...
[block] itemize-env-start
[block] use 'block' instance: list-2
[block] increment /P on input line ...
[block] use 'list' instance: itemize-2
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] itemize-env-start
[block] use 'block' instance: list-3
[block] increment /P on input line ...
[block] use 'list' instance: itemize-3
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] itemize-env-start
[block] use 'block' instance: list-4
[block] increment /P on input line ...
[block] use 'list' instance: itemize-4
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] blockenv common ending on input line ...
[block] blockenv common ending on input line ...
[block] Structure-end P at list-end on input line ...
[block] blockenv common ending on input line ...
[block] Structure-end P at list-end on input line ...
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] itemize-env-start
[block] use 'block' instance: list-2
[block] @endpe=false on input line ...
[block] use 'list' instance: itemize-2
[block] template:list:std
[block] template:list:std end
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] template:item:std
[block] item everypar on input line ...
[block] increment P on input line ...
[block] blockenv common ending on input line ...
[block] blockenv common ending on input line ...
[block] Structure-end P at list-end on input line ...
[block] flattened=false on input line ...
[block] Structure-end text-unit after displayblock on input line ...
[1
] (blocks-itemize-01.aux)<<latex-list-css.html>><<latex-align-css.html>>
Package tagpdf Info: Finalizing the tagging structure:
(tagpdf)             Writing out ~82 structure objects
(tagpdf)             with ~32 'MC' leaf nodes.
(tagpdf)             Be patient if there are lots of objects!
Package tagpdf Info: writing ParentTree
Package tagpdf Info: writing IDTree
Package tagpdf Info: writing RoleMap
Package tagpdf Info: writing ClassMap
Package tagpdf Info: writing NameSpaces
Package tagpdf Info: writing StructElems
Package tagpdf Info: writing Root
