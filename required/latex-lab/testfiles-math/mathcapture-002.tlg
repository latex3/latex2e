This is a generated file for the l3build validation system.
Don't change this file in any respect.
-----------------------------------
Math env math
\alpha \neq \beta \pmod x
====>first-result=macro:->\alpha \neq \beta \pmod x
====>first-tmpmathcontent=macro:->
====>formula has no subparts
-----------------------------------
Math env equation
(a+b)^2 = a^2+2ab+b^2
====>first-result=macro:->(a+b)^2 = a^2+2ab+b^2
====>first-tmpmathcontent=macro:->
====>formula has no subparts
-----------------------------------
Math env equation*
\sin ^2\eta +\cos ^2\eta = 1
==> @endpe=false on input line ...
====>first-result=macro:->\sin ^2\eta +\cos ^2\eta = 1
====>first-tmpmathcontent=macro:->
====>formula has no subparts
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
-----------------------------------
Math env gather
(a + b)^2 = a^2 + 2ab + b^2 \\ (a + b) \cdot (a - b) = a^2 - b^2
====>first-result=macro:->(a + b)^2 = a^2 + 2ab + b^2 
====>first-tmpmathcontent=macro:-> (a + b) \cdot (a - b) = a^2 - b^2
====>formula has subparts
====>result=macro:-> (a + b) \cdot (a - b) = a^2 - b^2
====>tmpmathcontent=macro:->
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
-----------------------------------
Math env gather
D(a,r) \equiv \{ z \in \mathbf {C} \colon |z - a| < r \} \notag \\ \operatorname {seg} (a, r) \equiv \{ z \in \mathbf {C} \colon \Im z < \Im a, \ |z - a| < r \} \\ C (E, \theta , r) \equiv \bigcup _{e \in E} c (e, \theta , r)
====>first-result=macro:->D(a,r) \equiv \{ z \in \mathbf {C} \colon |z - a| < r \} \notag 
====>first-tmpmathcontent=macro:-> \operatorname {seg} (a, r) \equiv \{ z \in \mathbf {C} \colon \Im z < \Im a, \ |z - a| < r \} \\ C (E, \theta , r) \equiv \bigcup _{e \in E} c (e, \theta , r)
====>formula has subparts
====>result=macro:-> \operatorname {seg} (a, r) \equiv \{ z \in \mathbf {C} \colon \Im z < \Im a, \ |z - a| < r \} 
====>tmpmathcontent=macro:-> C (E, \theta , r) \equiv \bigcup _{e \in E} c (e, \theta , r)
====>result=macro:-> C (E, \theta , r) \equiv \bigcup _{e \in E} c (e, \theta , r)
====>tmpmathcontent=macro:->
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
-----------------------------------
Math env align
(a + b)^3 &= (a + b) (a + b)^2 \\ &= (a + b)(a^2 + 2ab + b^2) \\ &= a^3 + 3a^2b + 3ab^2 + b^3
====>first-result=macro:->(a + b)^3 &= (a + b) (a + b)^2 
====>first-tmpmathcontent=macro:-> &= (a + b)(a^2 + 2ab + b^2) \\ &= a^3 + 3a^2b + 3ab^2 + b^3
====>formula has subparts
====>result=macro:-> &= (a + b)(a^2 + 2ab + b^2) 
====>tmpmathcontent=macro:-> &= a^3 + 3a^2b + 3ab^2 + b^3
====>result=macro:-> &= a^3 + 3a^2b + 3ab^2 + b^3
====>tmpmathcontent=macro:->
-----------------------------------
Math env align
x^2 + y^2 & = 1 \\ x & = \sqrt {1-y^2}
==> @endpe=false on input line ...
====>first-result=macro:->x^2 + y^2 & = 1 
====>first-tmpmathcontent=macro:-> x & = \sqrt {1-y^2}
====>formula has subparts
====>result=macro:-> x & = \sqrt {1-y^2}
====>tmpmathcontent=macro:->
==> flattened=false on input line ...
==> Structure-end text-unit after displayblock on input line ...
[1
] (mathcapture-002.aux)
Package tagpdf Info: Finalizing the tagging structure:
(tagpdf)             Writing out ~49 structure objects
(tagpdf)             with ~44 'MC' leaf nodes.
(tagpdf)             Be patient if there are lots of objects!
Package tagpdf Info: writing ParentTree
Package tagpdf Info: writing IDTree
Package tagpdf Info: writing RoleMap
Package tagpdf Info: writing ClassMap
Package tagpdf Info: writing NameSpaces
Package tagpdf Info: writing StructElems
Package tagpdf Info: writing Root
