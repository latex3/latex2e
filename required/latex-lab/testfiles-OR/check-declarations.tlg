This is a generated file for the l3build validation system.
Don't change this file in any respect.
-> The hook 'fnmark/before':
> The hook is empty.
-> The hook 'fnmark':
> The hook is empty.
-> The hook 'fnmark/begin':
> The hook is empty.
-> The hook 'fnmark/end':
> The hook is empty.
-> The hook 'fnmark/after':
> The hook is empty.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line ....
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line ....
Socket fntext/process:
    number of inputs = 1
    available plugs = noop, identity, default, side, mp
    current plug = default
    definition = \long macro:#1->\insert \footins {#1}
Socket fntext/make:
    number of inputs = 1
    available plugs = noop, identity, default, para
    current plug = default
    definition = \long macro:#1->\@makefntext {#1}
Socket fntext/begin:
    number of inputs = 0
    available plugs = noop, default
    current plug = default
    definition = \long macro:->\rule \z@ \footnotesep 
Socket fntext/end:
    number of inputs = 0
    available plugs = noop, default, para
    current plug = default
    definition = \long macro:->\@finalstrut \strutbox 
Socket fntext/mark:
    number of inputs = 0
    available plugs = noop, default
    current plug = default
    definition = \long macro:->\ifdim \footnotemargin >\z@ \hb@xt@ \footnotemargin {\hss \@makefnmark }\else \ifdim \footnotemargin =\z@ \llap {\@makefnmark }\else \ifdim \footnotemargin =-\maxdimen \@makefnmark \else \llap {\hb@xt@ -\footnotemargin {\@makefnmark \hss }}\fi \fi \fi 
Socket fntext/text:
    number of inputs = 1
    available plugs = noop, identity
    current plug = identity
    definition = \long macro:#1->#1
Socket tagsupport/fnmark:
    number of inputs = 1
    available plugs = noop, identity, FEMark
    current plug = FEMark
    definition = \long macro:#1->\tag_mc_end_push: \tag_struct_begin:n {tag=footnotemark}\bool_if:NTF \l__fnote_autodetect_bool {\fnote_mark_gput:oo {\@thefnmark }{\l_fnote_type_tl }\tl_set:Ne \l__fnote_linktarget_tl {footnote*.\tag_get:n {struct_num}}}{\hook_gput_code:nne {tagpdf/finish/before}{tagpdf/footnote}{\exp_not:N \fnote_gput_refs:ee {\tag_get:n {struct_num}}{\property_ref:ee {__fnote/\l__fnote_currentlabel_tl }{fnote/struct}}}\tl_set:Ne \l__fnote_linktarget_tl {footnote*.\property_ref:ee {__fnote/\l__fnote_currentlabel_tl }{fnote/struct}}}\tag_mc_begin:n {tag=Lbl}\bool_if:NTF \l_fnote_link_bool {\exp_args:No \hyper@linkstart {\l_fnote_link_type_tl }{\l__fnote_linktarget_tl }#1\hyper@linkend }{#1}\tag_mc_end: \tag_struct_end: \tag_mc_begin_pop:n {}
Socket tagsupport/fntext/begin:
    number of inputs = 0
    available plugs = noop, FENote
    current plug = FENote
    definition = \long macro:->\tag_mc_end_push: \tag_check_child:nnTF {FENote}{pdf2}{\tag_struct_begin:n {tag=footnote}}{\tag_struct_begin:n {tag=footnote,parent=\int_max:nn {2}{\tag_get:n {current_Sect}+0}}}\tl_set:Ne \l__fnote_currentstruct_tl {\tag_get:n {struct_num}}\bool_if:NTF \l__fnote_autodetect_bool {\fnote_mark_gpop_all:ooN {\@thefnmark }{\l_fnote_type_tl }\l__fnote_currentrefs_seq \seq_map_inline:Nn \l__fnote_currentrefs_seq {\fnote_gput_refs:ee {##1}{\l__fnote_currentstruct_tl }}}{}
Socket tagsupport/fntext/end:
    number of inputs = 0
    available plugs = noop, FENote
    current plug = FENote
    definition = \long macro:->\tag_struct_end: \tag_mc_begin_pop:n {}
Socket tagsupport/fntext/mark:
    number of inputs = 1
    available plugs = noop, identity, FENoteLbl
    current plug = FENoteLbl
    definition = \long macro:#1->\tag_mc_end_push: \seq_map_inline:Nn \l__fnote_currentrefs_seq {\MakeLinkTarget *{footnote*.##1}}\MakeLinkTarget *{footnote*.\l__fnote_currentstruct_tl }\tag_struct_begin:n {tag=footnotelabel,parent=\l__fnote_currentstruct_tl ,firstkid}\tag_mc_begin:n {tag=Lbl}#1\tag_mc_end: \tag_struct_end: \tag_mc_begin_pop:n {}
Socket tagsupport/fntext/text:
    number of inputs = 1
    available plugs = noop, identity, FENotetext
    current plug = FENotetext
    definition = \long macro:#1->\tag_mc_end_push: \tag_mc_begin:n {}#1\tag_mc_end: \tag_mc_begin_pop:n {}
-> The hook 'fntext/before':
> The hook is empty.
-> The hook 'fntext':
> The hook is empty.
-> The hook 'fntext/para':
> The hook is empty.
-> The hook 'fntext/begin':
> Code chunks:
>     latex-lab-testphase-new-or-2 -> \cs_set_protected:Npn \__fnote_label_hook:e ##1{\property_record:ee {__fnote/##1}{fnote/struct}}
> Document-level (top-level) code (executed last):
>     ---
> Extra code for next invocation:
>     ---
> Rules:
>     ---
> Execution order:
>     latex-lab-testphase-new-or-2.
-> The hook 'fntext/end':
> The hook is empty.
-> The hook 'fntext/after':
> The hook is empty.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line ....
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line ....
