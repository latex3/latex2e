% \iffalse meta-comment
%
%% File: latex-lab-context.dtx (C) Copyright 2025 LaTeX Project
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
%
% The development version of the bundle can be found below
%
%    https://github.com/latex3/latex2e/required/latex-lab
%
% for those people who are interested or want to report an issue.
%
\def\ltlabcontextdate{2025-07-09}
\def\ltlabcontextversion{0.5a}
%<*driver>
\DocumentMetadata{tagging=on,pdfstandard=ua-2,lang=en}
\documentclass{l3doc}
\usepackage{latex-lab-testphase-l3doc}
\EnableCrossrefs
\CodelineIndex
\begin{document}
  \DocInput{latex-lab-context.dtx}
\end{document}
%</driver>
%
% \fi
%
% \title{The \textsf{latex-lab-context} package\\
%    Providing context for template instances and code that needs
%    to know where and when it are executed}
%
% \author{\LaTeX{} Project\thanks{Initial implementation done by Frank mittelbach}}
% \date{v\ltlabcontextversion\ \ltlabcontextdate}
%
% \maketitle
%
% \newcommand{\xt}[1]{\textsl{\textsf{#1}}}
% \newcommand{\TODO}[1]{\textbf{[TODO:} #1\textbf{]}}
%
% \providecommand\hook[1]{\texttt{#1}}
%
% \begin{abstract}
% \end{abstract}
%
% \section{Introduction}
%
% 
% \section{Provided or redefined commands}
%
% \begin{function}{}
% 
% \end{function}
% 
% \begin{function}{}
%
% \end{function}
% 
% \section{Implementation}
%    \begin{macrocode}
%<*package>
%<@@=tag>
%    \end{macrocode}
%    \begin{macrocode}
\ProvidesExplPackage {latex-lab-testphase-context} {\ltlabcontextdate} {\ltlabcontextversion}
  {Providing context for instance, etc.}
%    \end{macrocode}
%
%    \begin{macrocode}
%<*package>
%<@@=context>
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{latex-lab-testphase-block}  
%    \end{macrocode}
%    
%    
%    
%    
%    
% \subsubsection{Debugging}
%
%    
%  \begin{variable}{\g_@@_debug_bool}
%    
%    \begin{macrocode}
\bool_new:N \g_@@_debug_bool
%    \end{macrocode}
%  \end{variable}
%
%
%  \begin{macro}{\@@_debug:n,\@@_debug_typeout:n}
%    
%    \begin{macrocode}
\cs_new_eq:NN \@@_debug:n \use_none:n
\cs_new_eq:NN \@@_debug_typeout:n \use_none:n
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\context_debug_on:,\context_debug_off:,
%                \@@_debug_gset:}
%    \begin{macrocode}
\cs_new_protected:Npn \context_debug_on:
  {
    \bool_gset_true:N \g_@@_debug_bool
    \@@_debug_gset:
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_new_protected:Npn \context_debug_off:
  {
    \bool_gset_false:N \g_@@_debug_bool
    \@@_debug_gset:
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_new_protected:Npn \@@_debug_gset:
  {
    \cs_gset_protected:Npx \@@_debug:n ##1
      { \bool_if:NT \g_@@_debug_bool {##1} }
    \cs_gset_protected:Npx \@@_debug_typeout:n ##1
      { \bool_if:NT \g_@@_debug_bool { \typeout{[Context]~ ==>~ ##1} } }
  }
%    \end{macrocode}
%  \end{macro}
%
%
%  \begin{macro}{\DebugContextsOn,\DebugContextsOff}
%    
%    \begin{macrocode}
\cs_new_protected:Npn \DebugContextsOn  { \context_debug_on:  }
\cs_new_protected:Npn \DebugContextsOff { \context_debug_off: }
%    \end{macrocode}
%    
%    \begin{macrocode}
\DebugContextsOff
%    \end{macrocode}
%  \end{macro}
%
%
%
%
%  \begin{macro}{\l_context_primary_tl}
%    
%    \begin{macrocode}
\tl_new:N \l_context_primary_tl
%    \end{macrocode}
%  \end{macro}
%
%
%
%  \begin{macro}{\l_@@_secondary_tl}
%    \TODO{to be replaced by a multi-dimensional solution}
%    \begin{macrocode}
\tl_new:N \l_@@_secondary_tl
%    \end{macrocode}
%  \end{macro}
%
%
%
%  \begin{macro}{\SetPrimaryContext}
%    
%    \begin{macrocode}
\newcommand \SetPrimaryContext [1] {
  \tl_set:Ne \l_context_primary_tl
     { \cs_if_exist_use:cF
          { @@_primary_ \l_context_primary_tl _ #1 _tl }
          { \cs_if_exist_use:cF
            { @@_primary_ * _ #1 _tl }
            { #1 }
          }
     }
}
%    \end{macrocode}
%  \end{macro}
%
%
%  \begin{macro}{\DeclarePrimaryContextRule}
%    
%    \begin{macrocode}
\newcommand \DeclarePrimaryContextRule [3] {
  \tl_clear_new:c { @@_primary_ #1 _ #2 _tl }
  \tl_gset:cn     { @@_primary_ #1 _ #2 _tl } {#3}
}
%    \end{macrocode}
%  \end{macro}
%
%
%
% \subsection{Changes to lttemplates.dtx code}
%
%    \begin{macrocode}
%<@@=template>
%    \end{macrocode}
%
%    In the normal case (both primary and secondary context  are empty
%    we have 3 test. We have up to 4 tests if only primary is
%    non-empty and up to 5 tests if secondary is non-empty.
%    \begin{macrocode}
\cs_set_protected:Npn \_@@_use_instance_aux:nn #1#2 {
  \tl_if_empty:NTF \l__context_secondary_tl
     {
       \tl_if_empty:NTF \l_context_primary_tl
          {
            \_@@_if_instance_exist:nnTF {#1} {#2}
              { \_@@_use_existing_instance:nn { #1 } { #2 } }
              { \msg_error:nnnn { template } { unknown-instance } {#1} {#2} }
          }
          {
            \_@@_if_instance_exist:nnTF {#1} { #2 : \l_context_primary_tl  }
              { \_@@_use_existing_instance:nn { #1 } { : \l_context_primary_tl } }
              {
                \_@@_if_instance_exist:nnTF {#1} {#2}
                  { \_@@_use_existing_instance:nn { #1 } { #2 } }
                  { \msg_error:nnnn { template } { unknown-instance } {#1} {#2} }
              }
          }
     }
     {
       \_@@_if_instance_exist:nnTF {#1} { #2 : \l_context_primary_tl : \l_context_secondary  }
         { \_@@_use_existing_instance:nn { #1 } { : \l_context_primary_tl : \l_context_secondary } }
         {
           \tl_if_empty:NTF \l_context_primary_tl
              {
                \_@@_if_instance_exist:nnTF {#1} {#2}
                  { \_@@_use_existing_instance:nn { #1 } { #2 } }
                  { \msg_error:nnnn { template } { unknown-instance } {#1} {#2} }
              }
              {
                \_@@_if_instance_exist:nnTF {#1} { #2 : \l_context_primary_tl  }
                  { \_@@_use_existing_instance:nn { #1 } { : \l_context_primary_tl } }
                  {
                    \_@@_if_instance_exist:nnTF {#1} {#2}
                      { \_@@_use_existing_instance:nn { #1 } { #2 } }
                      { \msg_error:nnnn { template } { unknown-instance } {#1} {#2} }
                  }
              }
         }
     }
}
%    \end{macrocode}
%    
%
%
%  \begin{macro}{\_@@_use_existing_instance:nn}
%    
%    \begin{macrocode}
\cs_new_protected:Npn \_@@_use_existing_instance:nn #1#2 {
  \@@_debug_typeout:n{use~ '#1'~ instance:~ #2 }
  \use:c { \c_@@_instances_root_tl #1 / #2 }
}
%    \end{macrocode}
%  \end{macro}
%
%
% \subsubsection{Debugging of templates}
%
%    
%  \begin{variable}{\g_@@_debug_bool}
%    
%    \begin{macrocode}
\bool_new:N \g_@@_debug_bool
%    \end{macrocode}
%  \end{variable}
%
%
%  \begin{macro}{\@@_debug:n,\@@_debug_typeout:n}
%    
%    \begin{macrocode}
\cs_new_eq:NN \@@_debug:n \use_none:n
\cs_new_eq:NN \@@_debug_typeout:n \use_none:n
%    \end{macrocode}
%  \end{macro}
%
%  \begin{macro}{\template_debug_on:,\template_debug_off:,
%                \@@_debug_gset:}
%    \begin{macrocode}
\cs_new_protected:Npn \template_debug_on:
  {
    \bool_gset_true:N \g_@@_debug_bool
    \@@_debug_gset:
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_new_protected:Npn \template_debug_off:
  {
    \bool_gset_false:N \g_@@_debug_bool
    \@@_debug_gset:
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_new_protected:Npn \@@_debug_gset:
  {
    \cs_gset_protected:Npx \@@_debug:n ##1
      { \bool_if:NT \g_@@_debug_bool {##1} }
    \cs_gset_protected:Npx \@@_debug_typeout:n ##1
      { \bool_if:NT \g_@@_debug_bool { \typeout{[Template]~ ==>~ ##1} } }
  }
%    \end{macrocode}
%  \end{macro}
%
%
%  \begin{macro}{\DebugTemplatesOn,\DebugTemplatesOff}
%    
%    \begin{macrocode}
\cs_new_protected:Npn \DebugTemplatesOn  { \template_debug_on:  }
\cs_new_protected:Npn \DebugTemplatesOff { \template_debug_off: }
%    \end{macrocode}
%    
%    \begin{macrocode}
\DebugTemplatesOn
%    \end{macrocode}
%  \end{macro}
%
%
%
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
%
%
%    \begin{macrocode}
%<*latex-lab>
\ProvidesFile{context-latex-lab-testphase.ltx}
        [\ltlabcontextdate\space v\ltlabcontextversion\space 
         latex-lab wrapper context]

\RequirePackage{latex-lab-testphase-context}

%</latex-lab>
%    \end{macrocode}
